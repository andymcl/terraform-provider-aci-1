2019/03/04 17:17:36 [INFO] Terraform version: 0.11.11  ac4fff416318bf0915a0ab80e062a99ef3724334
2019/03/04 17:17:36 [INFO] Go runtime version: go1.11.1
2019/03/04 17:17:36 [INFO] CLI args: []string{"/Users/crest/go/bin/terraform", "apply"}
2019/03/04 17:17:36 [DEBUG] Attempting to open CLI config file: /Users/crest/.terraformrc
2019/03/04 17:17:36 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2019/03/04 17:17:36 [INFO] CLI command args: []string{"apply"}
2019/03/04 17:17:36 [INFO] command: empty terraform config, returning nil
2019/03/04 17:17:36 [DEBUG] command: no data state file found for backend config
2019/03/04 17:17:36 [DEBUG] New state was assigned lineage "3a31a347-4ae2-4bdf-d670-c11b40cc05e5"
2019/03/04 17:17:36 [INFO] command: backend initialized: <nil>
2019/03/04 17:17:36 [DEBUG] checking for provider in "."
2019/03/04 17:17:36 [DEBUG] checking for provider in "/Users/crest/go/bin"
2019/03/04 17:17:36 [WARN] found legacy provider "terraform-provider-aci"
2019/03/04 17:17:36 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2019/03/04 17:17:36 [DEBUG] found valid plugin: "aci", "0.0.0", "/Users/crest/go/bin/terraform-provider-aci"
2019/03/04 17:17:36 [DEBUG] checking for provisioner in "."
2019/03/04 17:17:36 [DEBUG] checking for provisioner in "/Users/crest/go/bin"
2019/03/04 17:17:36 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2019/03/04 17:17:36 [INFO] command: backend <nil> is not enhanced, wrapping in local
2019/03/04 17:17:36 [INFO] backend/local: starting Apply operation
2019/03/04 17:17:36 [TRACE] Preserving existing state lineage "bb139ca6-a8ba-c12c-89c8-22304857bc14"
2019/03/04 17:17:36 [TRACE] Preserving existing state lineage "bb139ca6-a8ba-c12c-89c8-22304857bc14"
2019/03/04 17:17:36 [INFO] terraform: building graph: GraphTypeInput
2019/03/04 17:17:36 [TRACE] ConfigTransformer: Starting for path: []
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ConfigTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
aci_tenant.demotenant - *terraform.NodeAbstractResource
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
aci_tenant.test_tenant - *terraform.NodeAbstractResource
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.LocalTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
aci_tenant.demotenant - *terraform.NodeAbstractResource
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
aci_tenant.test_tenant - *terraform.NodeAbstractResource
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.OutputTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
aci_tenant.demotenant - *terraform.NodeAbstractResource
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
aci_tenant.test_tenant - *terraform.NodeAbstractResource
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
aci_tenant.demotenant - *terraform.NodeAbstractResource
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
aci_tenant.test_tenant - *terraform.NodeAbstractResource
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
aci_tenant.demotenant - *terraform.NodeAbstractResource
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
aci_tenant.test_tenant - *terraform.NodeAbstractResource
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Beginning...
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_tenant.demotenant
2019/03/04 17:17:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"demotenant", Type:"aci_tenant", RawCount:(*config.RawConfig)(0xc000416310), RawConfig:(*config.RawConfig)(0xc0004162a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_tenant.test_tenant
2019/03/04 17:17:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"test_tenant", Type:"aci_tenant", RawCount:(*config.RawConfig)(0xc0004163f0), RawConfig:(*config.RawConfig)(0xc000416380), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_rest.rest_mon_epg_pol
2019/03/04 17:17:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"rest_mon_epg_pol", Type:"aci_rest", RawCount:(*config.RawConfig)(0xc0004165b0), RawConfig:(*config.RawConfig)(0xc000416540), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_tenant.tenant_for_filter
2019/03/04 17:17:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tenant_for_filter", Type:"aci_tenant", RawCount:(*config.RawConfig)(0xc0003d9ea0), RawConfig:(*config.RawConfig)(0xc0003d9e30), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_filter.deny_rule_filter1
2019/03/04 17:17:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"deny_rule_filter1", Type:"aci_filter", RawCount:(*config.RawConfig)(0xc0003d9f80), RawConfig:(*config.RawConfig)(0xc0003d9f10), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_filter.deny_rule_filter2
2019/03/04 17:17:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"deny_rule_filter2", Type:"aci_filter", RawCount:(*config.RawConfig)(0xc000416070), RawConfig:(*config.RawConfig)(0xc000416000), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
aci_tenant.demotenant - *terraform.NodeAbstractResource
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
aci_tenant.test_tenant - *terraform.NodeAbstractResource
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_filter.deny_rule_filter2": aci_filter.deny_rule_filter2
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_tenant.demotenant": aci_tenant.demotenant
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_tenant.test_tenant": aci_tenant.test_tenant
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_rest.rest_mon_epg_pol": aci_rest.rest_mon_epg_pol
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_tenant.tenant_for_filter": aci_tenant.tenant_for_filter
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_filter.deny_rule_filter1": aci_filter.deny_rule_filter1
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
aci_tenant.demotenant - *terraform.NodeAbstractResource
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
aci_tenant.test_tenant - *terraform.NodeAbstractResource
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootVariableTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
aci_tenant.demotenant - *terraform.NodeAbstractResource
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
aci_tenant.test_tenant - *terraform.NodeAbstractResource
2019/03/04 17:17:36 [TRACE] ProviderConfigTransformer: Starting for path: []
2019/03/04 17:17:36 [TRACE] Attach provider request: []string{} aci
2019/03/04 17:17:36 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aci", Alias:"", Version:"", RawConfig:(*config.RawConfig)(0xc000416230)}
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ProviderConfigTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
aci_tenant.demotenant - *terraform.NodeAbstractResource
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
aci_tenant.test_tenant - *terraform.NodeAbstractResource
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
aci_tenant.demotenant - *terraform.NodeAbstractResource
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
aci_tenant.test_tenant - *terraform.NodeAbstractResource
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [DEBUG] resource aci_tenant.tenant_for_filter using provider provider.aci
2019/03/04 17:17:36 [DEBUG] resource aci_filter.deny_rule_filter1 using provider provider.aci
2019/03/04 17:17:36 [DEBUG] resource aci_filter.deny_rule_filter2 using provider provider.aci
2019/03/04 17:17:36 [DEBUG] resource aci_tenant.demotenant using provider provider.aci
2019/03/04 17:17:36 [DEBUG] resource aci_tenant.test_tenant using provider provider.aci
2019/03/04 17:17:36 [DEBUG] resource aci_rest.rest_mon_epg_pol using provider provider.aci
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.PruneProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.graphTransformerMulti:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RemovedModuleTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "provider.aci" references: []
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_tenant.tenant_for_filter" references: []
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_filter.deny_rule_filter1" references: [aci_tenant.tenant_for_filter]
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_filter.deny_rule_filter2" references: [aci_tenant.tenant_for_filter]
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_tenant.demotenant" references: [aci_filter.deny_rule_filter1 aci_filter.deny_rule_filter2 aci_rest.rest_mon_epg_pol]
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_tenant.test_tenant" references: []
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_rest.rest_mon_epg_pol" references: [aci_tenant.test_tenant]
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  aci_tenant.demotenant - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  aci_tenant.demotenant - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  aci_tenant.demotenant - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
provider.aci (close) - *terraform.graphNodeCloseProvider
  aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  aci_tenant.demotenant - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  aci_tenant.demotenant - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
provider.aci (close) - *terraform.graphNodeCloseProvider
  aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  aci_tenant.demotenant - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  aci_tenant.demotenant - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
provider.aci (close) - *terraform.graphNodeCloseProvider
  aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  aci_tenant.demotenant - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aci (close) - *terraform.graphNodeCloseProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
  aci_tenant.test_tenant - *terraform.NodeAbstractResource
aci_tenant.demotenant - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter1 - *terraform.NodeAbstractResource
  aci_filter.deny_rule_filter2 - *terraform.NodeAbstractResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeAbstractResource
aci_tenant.tenant_for_filter - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeAbstractResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_tenant.demotenant - *terraform.NodeAbstractResource
provider.aci - *terraform.NodeApplyableProvider
provider.aci (close) - *terraform.graphNodeCloseProvider
  aci_tenant.demotenant - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aci (close) - *terraform.graphNodeCloseProvider
2019/03/04 17:17:36 [DEBUG] Starting graph walk: walkInput
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_filter.deny_rule_filter1"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_filter.deny_rule_filter2"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_tenant.demotenant"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_tenant.test_tenant"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "provider.aci (close)"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "provider.aci"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "root"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_tenant.tenant_for_filter"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_rest.rest_mon_epg_pol"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_tenant.test_tenant" waiting on "provider.aci"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_tenant.demotenant" waiting on "aci_filter.deny_rule_filter2"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aci_tenant.demotenant"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "root" waiting on "provider.aci (close)"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_tenant.demotenant" waiting on "aci_filter.deny_rule_filter1"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "provider.aci (close)" waiting on "aci_tenant.demotenant"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_filter.deny_rule_filter2" waiting on "aci_tenant.tenant_for_filter"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_tenant.tenant_for_filter" waiting on "provider.aci"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_rest.rest_mon_epg_pol" waiting on "aci_tenant.test_tenant"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_filter.deny_rule_filter1" waiting on "aci_tenant.tenant_for_filter"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_tenant.demotenant" waiting on "aci_rest.rest_mon_epg_pol"
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "aci_filter.deny_rule_filter1", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "aci_tenant.test_tenant", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "aci_tenant.demotenant", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "provider.aci (close)", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "aci_filter.deny_rule_filter2", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "aci_tenant.tenant_for_filter", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "aci_rest.rest_mon_epg_pol", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: walking "provider.aci"
2019/03/04 17:17:36 [TRACE] vertex 'root.provider.aci': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.provider.aci': evaluating
2019/03/04 17:17:36 [TRACE] [walkInput] Entering eval tree: provider.aci
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInitProvider
2019-03-04T17:17:36.892+0530 [DEBUG] plugin: starting plugin: path=/Users/crest/go/bin/terraform-provider-aci args=[/Users/crest/go/bin/terraform-provider-aci]
2019-03-04T17:17:36.896+0530 [DEBUG] plugin: waiting for RPC address: path=/Users/crest/go/bin/terraform-provider-aci
2019-03-04T17:17:36.916+0530 [DEBUG] plugin.terraform-provider-aci: plugin address: timestamp=2019-03-04T17:17:36.916+0530 address=/var/folders/5s/w4ns2tt56sx3r41c2_s74mj40000gn/T/plugin076384432 network=unix
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalOpFilter
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolateProvider
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInputProvider
2019/03/04 17:17:36 [TRACE] root: eval: terraform.EvalNoop
2019/03/04 17:17:36 [TRACE] root: eval: terraform.EvalNoop
2019/03/04 17:17:36 [TRACE] root: eval: terraform.EvalNoop
2019/03/04 17:17:36 [TRACE] [walkInput] Exiting eval tree: provider.aci
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_tenant.test_tenant"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.test_tenant': walking
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_rest.rest_mon_epg_pol"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_rest.rest_mon_epg_pol': walking
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_tenant.tenant_for_filter"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.tenant_for_filter': walking
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_filter.deny_rule_filter1"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter1': walking
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_filter.deny_rule_filter2"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter2': walking
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_tenant.demotenant"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.demotenant': walking
2019/03/04 17:17:36 [TRACE] dag/walk: walking "provider.aci (close)"
2019/03/04 17:17:36 [TRACE] vertex 'root.provider.aci (close)': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.provider.aci (close)': evaluating
2019/03/04 17:17:36 [TRACE] [walkInput] Entering eval tree: provider.aci (close)
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCloseProvider
2019/03/04 17:17:36 [TRACE] [walkInput] Exiting eval tree: provider.aci (close)
2019/03/04 17:17:36 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2019/03/04 17:17:36 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2019/03/04 17:17:36 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2019/03/04 17:17:36 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2019/03/04 17:17:36 [TRACE] dag/walk: walking "root"
2019/03/04 17:17:36 [TRACE] vertex 'root.root': walking
2019/03/04 17:17:36 [INFO] terraform: building graph: GraphTypeValidate
2019/03/04 17:17:36 [TRACE] ConfigTransformer: Starting for path: []
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ConfigTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
aci_tenant.demotenant - *terraform.NodeValidatableResource
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
aci_tenant.test_tenant - *terraform.NodeValidatableResource
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.LocalTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
aci_tenant.demotenant - *terraform.NodeValidatableResource
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
aci_tenant.test_tenant - *terraform.NodeValidatableResource
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.OutputTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
aci_tenant.demotenant - *terraform.NodeValidatableResource
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
aci_tenant.test_tenant - *terraform.NodeValidatableResource
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
aci_tenant.demotenant - *terraform.NodeValidatableResource
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
aci_tenant.test_tenant - *terraform.NodeValidatableResource
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
aci_tenant.demotenant - *terraform.NodeValidatableResource
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
aci_tenant.test_tenant - *terraform.NodeValidatableResource
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Beginning...
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_tenant.tenant_for_filter
2019/03/04 17:17:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tenant_for_filter", Type:"aci_tenant", RawCount:(*config.RawConfig)(0xc0003d9ea0), RawConfig:(*config.RawConfig)(0xc0003d9e30), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_filter.deny_rule_filter1
2019/03/04 17:17:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"deny_rule_filter1", Type:"aci_filter", RawCount:(*config.RawConfig)(0xc0003d9f80), RawConfig:(*config.RawConfig)(0xc0003d9f10), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_filter.deny_rule_filter2
2019/03/04 17:17:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"deny_rule_filter2", Type:"aci_filter", RawCount:(*config.RawConfig)(0xc000416070), RawConfig:(*config.RawConfig)(0xc000416000), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_tenant.demotenant
2019/03/04 17:17:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"demotenant", Type:"aci_tenant", RawCount:(*config.RawConfig)(0xc000416310), RawConfig:(*config.RawConfig)(0xc0004162a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_tenant.test_tenant
2019/03/04 17:17:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"test_tenant", Type:"aci_tenant", RawCount:(*config.RawConfig)(0xc0004163f0), RawConfig:(*config.RawConfig)(0xc000416380), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_rest.rest_mon_epg_pol
2019/03/04 17:17:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"rest_mon_epg_pol", Type:"aci_rest", RawCount:(*config.RawConfig)(0xc0004165b0), RawConfig:(*config.RawConfig)(0xc000416540), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
aci_tenant.demotenant - *terraform.NodeValidatableResource
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
aci_tenant.test_tenant - *terraform.NodeValidatableResource
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_tenant.demotenant": aci_tenant.demotenant
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_tenant.test_tenant": aci_tenant.test_tenant
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_rest.rest_mon_epg_pol": aci_rest.rest_mon_epg_pol
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_tenant.tenant_for_filter": aci_tenant.tenant_for_filter
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_filter.deny_rule_filter1": aci_filter.deny_rule_filter1
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_filter.deny_rule_filter2": aci_filter.deny_rule_filter2
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
aci_tenant.demotenant - *terraform.NodeValidatableResource
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
aci_tenant.test_tenant - *terraform.NodeValidatableResource
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootVariableTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
aci_tenant.demotenant - *terraform.NodeValidatableResource
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
aci_tenant.test_tenant - *terraform.NodeValidatableResource
2019/03/04 17:17:36 [TRACE] ProviderConfigTransformer: Starting for path: []
2019/03/04 17:17:36 [TRACE] Attach provider request: []string{} aci
2019/03/04 17:17:36 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aci", Alias:"", Version:"", RawConfig:(*config.RawConfig)(0xc000416230)}
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ProviderConfigTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
aci_tenant.demotenant - *terraform.NodeValidatableResource
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
aci_tenant.test_tenant - *terraform.NodeValidatableResource
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
aci_tenant.demotenant - *terraform.NodeValidatableResource
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
aci_tenant.test_tenant - *terraform.NodeValidatableResource
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [DEBUG] resource aci_tenant.tenant_for_filter using provider provider.aci
2019/03/04 17:17:36 [DEBUG] resource aci_filter.deny_rule_filter1 using provider provider.aci
2019/03/04 17:17:36 [DEBUG] resource aci_filter.deny_rule_filter2 using provider provider.aci
2019/03/04 17:17:36 [DEBUG] resource aci_tenant.demotenant using provider provider.aci
2019/03/04 17:17:36 [DEBUG] resource aci_tenant.test_tenant using provider provider.aci
2019/03/04 17:17:36 [DEBUG] resource aci_rest.rest_mon_epg_pol using provider provider.aci
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.PruneProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.graphTransformerMulti:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ProvisionerTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.graphTransformerMulti:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RemovedModuleTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_tenant.tenant_for_filter" references: []
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_filter.deny_rule_filter1" references: [aci_tenant.tenant_for_filter]
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_filter.deny_rule_filter2" references: [aci_tenant.tenant_for_filter]
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_tenant.demotenant" references: [aci_filter.deny_rule_filter1 aci_filter.deny_rule_filter2 aci_rest.rest_mon_epg_pol]
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_tenant.test_tenant" references: []
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_rest.rest_mon_epg_pol" references: [aci_tenant.test_tenant]
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "provider.aci" references: []
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  aci_tenant.demotenant - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  aci_tenant.demotenant - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  aci_tenant.demotenant - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
provider.aci (close) - *terraform.graphNodeCloseProvider
  aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  aci_tenant.demotenant - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  aci_tenant.demotenant - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
provider.aci (close) - *terraform.graphNodeCloseProvider
  aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  aci_tenant.demotenant - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  aci_tenant.demotenant - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
provider.aci (close) - *terraform.graphNodeCloseProvider
  aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  aci_tenant.demotenant - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aci (close) - *terraform.graphNodeCloseProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
  aci_tenant.test_tenant - *terraform.NodeValidatableResource
aci_tenant.demotenant - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResource
aci_tenant.tenant_for_filter - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeValidatableResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_tenant.demotenant - *terraform.NodeValidatableResource
provider.aci - *terraform.NodeApplyableProvider
provider.aci (close) - *terraform.graphNodeCloseProvider
  aci_tenant.demotenant - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aci (close) - *terraform.graphNodeCloseProvider
2019/03/04 17:17:36 [DEBUG] Starting graph walk: walkValidate
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "provider.aci"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "provider.aci (close)"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "root"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_tenant.tenant_for_filter"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_filter.deny_rule_filter2"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_filter.deny_rule_filter1"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_tenant.test_tenant"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_rest.rest_mon_epg_pol"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_tenant.demotenant"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_tenant.tenant_for_filter" waiting on "provider.aci"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_tenant.demotenant" waiting on "aci_rest.rest_mon_epg_pol"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_filter.deny_rule_filter1" waiting on "aci_tenant.tenant_for_filter"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_tenant.demotenant" waiting on "aci_filter.deny_rule_filter1"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aci_tenant.demotenant"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_tenant.test_tenant" waiting on "provider.aci"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "root" waiting on "provider.aci (close)"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_rest.rest_mon_epg_pol" waiting on "aci_tenant.test_tenant"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_tenant.demotenant" waiting on "aci_filter.deny_rule_filter2"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_filter.deny_rule_filter2" waiting on "aci_tenant.tenant_for_filter"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "provider.aci (close)" waiting on "aci_tenant.demotenant"
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "aci_tenant.tenant_for_filter", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "aci_rest.rest_mon_epg_pol", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "aci_tenant.demotenant", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "aci_filter.deny_rule_filter1", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "aci_tenant.test_tenant", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "aci_filter.deny_rule_filter2", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "provider.aci (close)", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: walking "provider.aci"
2019/03/04 17:17:36 [TRACE] vertex 'root.provider.aci': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.provider.aci': evaluating
2019/03/04 17:17:36 [TRACE] [walkValidate] Entering eval tree: provider.aci
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInitProvider
2019/03/04 17:17:36 [TRACE] root: eval: terraform.EvalNoop
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalOpFilter
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolateProvider
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateProvider
2019/03/04 17:17:36 [TRACE] root: eval: terraform.EvalNoop
2019/03/04 17:17:36 [TRACE] root: eval: terraform.EvalNoop
2019/03/04 17:17:36 [TRACE] [walkValidate] Exiting eval tree: provider.aci
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_tenant.tenant_for_filter"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.tenant_for_filter': walking
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_tenant.test_tenant"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.test_tenant': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.tenant_for_filter': evaluating
2019/03/04 17:17:36 [TRACE] [walkValidate] Entering eval tree: aci_tenant.tenant_for_filter
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.test_tenant': evaluating
2019/03/04 17:17:36 [TRACE] [walkValidate] Entering eval tree: aci_tenant.test_tenant
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateCount
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2019/03/04 17:17:36 [TRACE] [walkValidate] Exiting eval tree: aci_tenant.tenant_for_filter
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.tenant_for_filter': expanding/walking dynamic subgraph
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aci_tenant.tenant_for_filter - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateCount
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_tenant.tenant_for_filter": aci_tenant.tenant_for_filter
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aci_tenant.tenant_for_filter - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aci_tenant.tenant_for_filter - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_tenant.tenant_for_filter" references: []
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aci_tenant.tenant_for_filter - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootTransformer:

aci_tenant.tenant_for_filter - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_tenant.tenant_for_filter"
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_tenant.tenant_for_filter"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.tenant_for_filter': walking
2019/03/04 17:17:36 [TRACE] [walkValidate] Exiting eval tree: aci_tenant.test_tenant
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.tenant_for_filter': evaluating
2019/03/04 17:17:36 [TRACE] [walkValidate] Entering eval tree: aci_tenant.tenant_for_filter
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.test_tenant': expanding/walking dynamic subgraph
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aci_tenant.test_tenant - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateResource
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_tenant.test_tenant": aci_tenant.test_tenant
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aci_tenant.test_tenant - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aci_tenant.test_tenant - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_tenant.test_tenant" references: []
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aci_tenant.test_tenant - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootTransformer:

aci_tenant.test_tenant - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_tenant.test_tenant"
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_tenant.test_tenant"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.test_tenant': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.test_tenant': evaluating
2019/03/04 17:17:36 [TRACE] [walkValidate] Entering eval tree: aci_tenant.test_tenant
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateResource
2019/03/04 17:17:36 [TRACE] [walkValidate] Exiting eval tree: aci_tenant.tenant_for_filter
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_filter.deny_rule_filter2"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter2': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter2': evaluating
2019/03/04 17:17:36 [TRACE] [walkValidate] Entering eval tree: aci_filter.deny_rule_filter2
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_filter.deny_rule_filter1"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter1': walking
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter1': evaluating
2019/03/04 17:17:36 [TRACE] [walkValidate] Entering eval tree: aci_filter.deny_rule_filter1
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] [walkValidate] Exiting eval tree: aci_tenant.test_tenant
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateCount
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateCount
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_rest.rest_mon_epg_pol"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_rest.rest_mon_epg_pol': walking
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_rest.rest_mon_epg_pol': evaluating
2019/03/04 17:17:36 [TRACE] [walkValidate] Exiting eval tree: aci_filter.deny_rule_filter2
2019/03/04 17:17:36 [TRACE] [walkValidate] Entering eval tree: aci_rest.rest_mon_epg_pol
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter2': expanding/walking dynamic subgraph
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_filter.deny_rule_filter2": aci_filter.deny_rule_filter2
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateCount
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_filter.deny_rule_filter2" references: []
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootTransformer:

aci_filter.deny_rule_filter2 - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_filter.deny_rule_filter2"
2019/03/04 17:17:36 [TRACE] [walkValidate] Exiting eval tree: aci_filter.deny_rule_filter1
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter1': expanding/walking dynamic subgraph
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_filter.deny_rule_filter2"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter2': walking
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] [walkValidate] Exiting eval tree: aci_rest.rest_mon_epg_pol
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_rest.rest_mon_epg_pol': expanding/walking dynamic subgraph
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter2': evaluating
2019/03/04 17:17:36 [TRACE] [walkValidate] Entering eval tree: aci_filter.deny_rule_filter2
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_filter.deny_rule_filter1": aci_filter.deny_rule_filter1
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_filter.deny_rule_filter1" references: []
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_rest.rest_mon_epg_pol": aci_rest.rest_mon_epg_pol
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_filter.deny_rule_filter1"
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_rest.rest_mon_epg_pol" references: []
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_filter.deny_rule_filter1"
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootTransformer:

aci_rest.rest_mon_epg_pol - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter1': walking
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateResource
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_rest.rest_mon_epg_pol"
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_rest.rest_mon_epg_pol"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_rest.rest_mon_epg_pol': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter1': evaluating
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_rest.rest_mon_epg_pol': evaluating
2019/03/04 17:17:36 [TRACE] [walkValidate] Entering eval tree: aci_rest.rest_mon_epg_pol
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] [walkValidate] Entering eval tree: aci_filter.deny_rule_filter1
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] [walkValidate] Exiting eval tree: aci_filter.deny_rule_filter2
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateResource
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateResource
2019/03/04 17:17:36 [TRACE] [walkValidate] Exiting eval tree: aci_rest.rest_mon_epg_pol
2019/03/04 17:17:36 [TRACE] [walkValidate] Exiting eval tree: aci_filter.deny_rule_filter1
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_tenant.demotenant"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.demotenant': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.demotenant': evaluating
2019/03/04 17:17:36 [TRACE] [walkValidate] Entering eval tree: aci_tenant.demotenant
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateCount
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2019/03/04 17:17:36 [TRACE] [walkValidate] Exiting eval tree: aci_tenant.demotenant
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.demotenant': expanding/walking dynamic subgraph
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aci_tenant.demotenant - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_tenant.demotenant": aci_tenant.demotenant
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aci_tenant.demotenant - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aci_tenant.demotenant - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_tenant.demotenant" references: []
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aci_tenant.demotenant - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootTransformer:

aci_tenant.demotenant - *terraform.NodeValidatableResourceInstance
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_tenant.demotenant"
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_tenant.demotenant"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.demotenant': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.demotenant': evaluating
2019/03/04 17:17:36 [TRACE] [walkValidate] Entering eval tree: aci_tenant.demotenant
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateResource
2019/03/04 17:17:36 [TRACE] [walkValidate] Exiting eval tree: aci_tenant.demotenant
2019/03/04 17:17:36 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2019/03/04 17:17:36 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2019/03/04 17:17:36 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2019/03/04 17:17:36 [TRACE] dag/walk: walking "provider.aci (close)"
2019/03/04 17:17:36 [TRACE] vertex 'root.provider.aci (close)': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.provider.aci (close)': evaluating
2019/03/04 17:17:36 [TRACE] [walkValidate] Entering eval tree: provider.aci (close)
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCloseProvider
2019/03/04 17:17:36 [TRACE] [walkValidate] Exiting eval tree: provider.aci (close)
2019/03/04 17:17:36 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2019/03/04 17:17:36 [TRACE] dag/walk: walking "root"
2019/03/04 17:17:36 [TRACE] vertex 'root.root': walking
2019/03/04 17:17:36 [INFO] backend/local: apply calling Refresh
2019/03/04 17:17:36 [INFO] terraform: building graph: GraphTypeRefresh
2019/03/04 17:17:36 [TRACE] No managed resources in state during refresh, skipping managed resource transformer
2019/03/04 17:17:36 [TRACE] ConfigTransformer: Starting for path: []
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ConfigTransformer:

2019/03/04 17:17:36 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Beginning...
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootVariableTransformer:

2019/03/04 17:17:36 [TRACE] ProviderConfigTransformer: Starting for path: []
2019/03/04 17:17:36 [TRACE] Attach provider request: []string{} aci
2019/03/04 17:17:36 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aci", Alias:"", Version:"", RawConfig:(*config.RawConfig)(0xc000416230)}
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ProviderConfigTransformer:

provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.MissingProviderTransformer:

provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ProviderTransformer:

provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [DEBUG] pruning unused provider provider.aci
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.PruneProviderTransformer:

2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2019/03/04 17:17:36 [TRACE] Graph after step *terraform.graphTransformerMulti:

2019/03/04 17:17:36 [TRACE] Graph after step *terraform.LocalTransformer:

2019/03/04 17:17:36 [TRACE] Graph after step *terraform.OutputTransformer:

2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TargetsTransformer:

2019/03/04 17:17:36 [TRACE] Graph after step *terraform.CloseProviderTransformer:

2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootTransformer:

root - terraform.graphNodeRoot
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

root - terraform.graphNodeRoot
2019/03/04 17:17:36 [DEBUG] Starting graph walk: walkRefresh
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "root"
2019/03/04 17:17:36 [TRACE] dag/walk: walking "root"
2019/03/04 17:17:36 [TRACE] vertex 'root.root': walking
2019/03/04 17:17:36 [INFO] backend/local: apply calling Plan
2019/03/04 17:17:36 [INFO] terraform: building graph: GraphTypePlan
2019/03/04 17:17:36 [TRACE] ConfigTransformer: Starting for path: []
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ConfigTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
aci_tenant.demotenant - *terraform.NodePlannableResource
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
aci_tenant.test_tenant - *terraform.NodePlannableResource
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.LocalTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
aci_tenant.demotenant - *terraform.NodePlannableResource
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
aci_tenant.test_tenant - *terraform.NodePlannableResource
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.OutputTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
aci_tenant.demotenant - *terraform.NodePlannableResource
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
aci_tenant.test_tenant - *terraform.NodePlannableResource
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
aci_tenant.demotenant - *terraform.NodePlannableResource
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
aci_tenant.test_tenant - *terraform.NodePlannableResource
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
aci_tenant.demotenant - *terraform.NodePlannableResource
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
aci_tenant.test_tenant - *terraform.NodePlannableResource
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Beginning...
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_tenant.tenant_for_filter
2019/03/04 17:17:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tenant_for_filter", Type:"aci_tenant", RawCount:(*config.RawConfig)(0xc0003d9ea0), RawConfig:(*config.RawConfig)(0xc0003d9e30), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_filter.deny_rule_filter1
2019/03/04 17:17:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"deny_rule_filter1", Type:"aci_filter", RawCount:(*config.RawConfig)(0xc0003d9f80), RawConfig:(*config.RawConfig)(0xc0003d9f10), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_filter.deny_rule_filter2
2019/03/04 17:17:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"deny_rule_filter2", Type:"aci_filter", RawCount:(*config.RawConfig)(0xc000416070), RawConfig:(*config.RawConfig)(0xc000416000), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_tenant.demotenant
2019/03/04 17:17:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"demotenant", Type:"aci_tenant", RawCount:(*config.RawConfig)(0xc000416310), RawConfig:(*config.RawConfig)(0xc0004162a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_tenant.test_tenant
2019/03/04 17:17:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"test_tenant", Type:"aci_tenant", RawCount:(*config.RawConfig)(0xc0004163f0), RawConfig:(*config.RawConfig)(0xc000416380), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_rest.rest_mon_epg_pol
2019/03/04 17:17:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"rest_mon_epg_pol", Type:"aci_rest", RawCount:(*config.RawConfig)(0xc0004165b0), RawConfig:(*config.RawConfig)(0xc000416540), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
aci_tenant.demotenant - *terraform.NodePlannableResource
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
aci_tenant.test_tenant - *terraform.NodePlannableResource
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_tenant.tenant_for_filter": aci_tenant.tenant_for_filter
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_filter.deny_rule_filter1": aci_filter.deny_rule_filter1
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_filter.deny_rule_filter2": aci_filter.deny_rule_filter2
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_tenant.demotenant": aci_tenant.demotenant
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_tenant.test_tenant": aci_tenant.test_tenant
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_rest.rest_mon_epg_pol": aci_rest.rest_mon_epg_pol
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
aci_tenant.demotenant - *terraform.NodePlannableResource
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
aci_tenant.test_tenant - *terraform.NodePlannableResource
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootVariableTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
aci_tenant.demotenant - *terraform.NodePlannableResource
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
aci_tenant.test_tenant - *terraform.NodePlannableResource
2019/03/04 17:17:36 [TRACE] ProviderConfigTransformer: Starting for path: []
2019/03/04 17:17:36 [TRACE] Attach provider request: []string{} aci
2019/03/04 17:17:36 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aci", Alias:"", Version:"", RawConfig:(*config.RawConfig)(0xc000416230)}
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ProviderConfigTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
aci_tenant.demotenant - *terraform.NodePlannableResource
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
aci_tenant.test_tenant - *terraform.NodePlannableResource
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
aci_tenant.demotenant - *terraform.NodePlannableResource
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
aci_tenant.test_tenant - *terraform.NodePlannableResource
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [DEBUG] resource aci_tenant.tenant_for_filter using provider provider.aci
2019/03/04 17:17:36 [DEBUG] resource aci_filter.deny_rule_filter1 using provider provider.aci
2019/03/04 17:17:36 [DEBUG] resource aci_filter.deny_rule_filter2 using provider provider.aci
2019/03/04 17:17:36 [DEBUG] resource aci_tenant.demotenant using provider provider.aci
2019/03/04 17:17:36 [DEBUG] resource aci_tenant.test_tenant using provider provider.aci
2019/03/04 17:17:36 [DEBUG] resource aci_rest.rest_mon_epg_pol using provider provider.aci
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.PruneProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.graphTransformerMulti:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RemovedModuleTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_tenant.demotenant" references: [aci_filter.deny_rule_filter1 aci_filter.deny_rule_filter2 aci_rest.rest_mon_epg_pol]
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_tenant.test_tenant" references: []
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_rest.rest_mon_epg_pol" references: [aci_tenant.test_tenant]
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "provider.aci" references: []
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_tenant.tenant_for_filter" references: []
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_filter.deny_rule_filter1" references: [aci_tenant.tenant_for_filter]
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_filter.deny_rule_filter2" references: [aci_tenant.tenant_for_filter]
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  aci_tenant.demotenant - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  aci_tenant.demotenant - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  aci_tenant.demotenant - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
provider.aci (close) - *terraform.graphNodeCloseProvider
  aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  aci_tenant.demotenant - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  aci_tenant.demotenant - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
provider.aci (close) - *terraform.graphNodeCloseProvider
  aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  aci_tenant.demotenant - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  aci_tenant.demotenant - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
provider.aci (close) - *terraform.graphNodeCloseProvider
  aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  aci_tenant.demotenant - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aci (close) - *terraform.graphNodeCloseProvider
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
  aci_tenant.test_tenant - *terraform.NodePlannableResource
aci_tenant.demotenant - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter1 - *terraform.NodePlannableResource
  aci_filter.deny_rule_filter2 - *terraform.NodePlannableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResource
aci_tenant.tenant_for_filter - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodePlannableResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_tenant.demotenant - *terraform.NodePlannableResource
provider.aci - *terraform.NodeApplyableProvider
provider.aci (close) - *terraform.graphNodeCloseProvider
  aci_tenant.demotenant - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aci (close) - *terraform.graphNodeCloseProvider
2019/03/04 17:17:36 [DEBUG] Starting graph walk: walkPlan
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_filter.deny_rule_filter2"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_tenant.test_tenant"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "provider.aci"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_filter.deny_rule_filter1"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_tenant.demotenant"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_rest.rest_mon_epg_pol"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "provider.aci (close)"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_tenant.tenant_for_filter"
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "root"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_filter.deny_rule_filter2" waiting on "aci_tenant.tenant_for_filter"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aci_tenant.demotenant"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "provider.aci (close)" waiting on "aci_tenant.demotenant"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_tenant.demotenant" waiting on "aci_filter.deny_rule_filter2"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_filter.deny_rule_filter1" waiting on "aci_tenant.tenant_for_filter"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_tenant.tenant_for_filter" waiting on "provider.aci"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_tenant.demotenant" waiting on "aci_rest.rest_mon_epg_pol"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_tenant.test_tenant" waiting on "provider.aci"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_tenant.demotenant" waiting on "aci_filter.deny_rule_filter1"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "aci_rest.rest_mon_epg_pol" waiting on "aci_tenant.test_tenant"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2019/03/04 17:17:36 [TRACE] dag/walk: added edge: "root" waiting on "provider.aci (close)"
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "provider.aci (close)", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "aci_filter.deny_rule_filter1", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "aci_tenant.tenant_for_filter", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "aci_tenant.test_tenant", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "aci_filter.deny_rule_filter2", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "aci_tenant.demotenant", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "aci_rest.rest_mon_epg_pol", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2019/03/04 17:17:36 [TRACE] dag/walk: walking "provider.aci"
2019/03/04 17:17:36 [TRACE] vertex 'root.provider.aci': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.provider.aci': evaluating
2019/03/04 17:17:36 [TRACE] [walkPlan] Entering eval tree: provider.aci
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInitProvider
2019/03/04 17:17:36 [TRACE] root: eval: terraform.EvalNoop
2019/03/04 17:17:36 [TRACE] root: eval: terraform.EvalNoop
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalOpFilter
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolateProvider
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalOpFilter
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalConfigProvider
2019/03/04 17:17:36 [TRACE] [walkPlan] Exiting eval tree: provider.aci
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_tenant.tenant_for_filter"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.tenant_for_filter': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.tenant_for_filter': evaluating
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_tenant.test_tenant"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.test_tenant': walking
2019/03/04 17:17:36 [TRACE] [walkPlan] Entering eval tree: aci_tenant.tenant_for_filter
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.test_tenant': evaluating
2019/03/04 17:17:36 [TRACE] [walkPlan] Entering eval tree: aci_tenant.test_tenant
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2019/03/04 17:17:36 [TRACE] [walkPlan] Exiting eval tree: aci_tenant.test_tenant
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.test_tenant': expanding/walking dynamic subgraph
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aci_tenant.test_tenant - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] OrphanResourceCount: Starting...
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aci_tenant.test_tenant - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_tenant.test_tenant": aci_tenant.test_tenant
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aci_tenant.test_tenant - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aci_tenant.test_tenant - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_tenant.test_tenant" references: []
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aci_tenant.test_tenant - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootTransformer:

aci_tenant.test_tenant - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_tenant.test_tenant"
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_tenant.test_tenant"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.test_tenant': walking
2019/03/04 17:17:36 [TRACE] [walkPlan] Exiting eval tree: aci_tenant.tenant_for_filter
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.tenant_for_filter': expanding/walking dynamic subgraph
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aci_tenant.tenant_for_filter - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] OrphanResourceCount: Starting...
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.test_tenant': evaluating
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aci_tenant.tenant_for_filter - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] [walkPlan] Entering eval tree: aci_tenant.test_tenant
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_tenant.tenant_for_filter": aci_tenant.tenant_for_filter
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aci_tenant.tenant_for_filter - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aci_tenant.tenant_for_filter - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_tenant.tenant_for_filter" references: []
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aci_tenant.tenant_for_filter - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootTransformer:

aci_tenant.tenant_for_filter - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateResource
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_tenant.tenant_for_filter"
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_tenant.tenant_for_filter"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.tenant_for_filter': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.tenant_for_filter': evaluating
2019/03/04 17:17:36 [TRACE] [walkPlan] Entering eval tree: aci_tenant.tenant_for_filter
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateResource
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalReadState
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalReadState
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalDiff
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalDiff
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCheckPreventDestroy
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalWriteState
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalWriteDiff
2019/03/04 17:17:36 [TRACE] [walkPlan] Exiting eval tree: aci_tenant.test_tenant
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCheckPreventDestroy
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalWriteState
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalWriteDiff
2019/03/04 17:17:36 [TRACE] [walkPlan] Exiting eval tree: aci_tenant.tenant_for_filter
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_rest.rest_mon_epg_pol"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_rest.rest_mon_epg_pol': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_rest.rest_mon_epg_pol': evaluating
2019/03/04 17:17:36 [TRACE] [walkPlan] Entering eval tree: aci_rest.rest_mon_epg_pol
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_filter.deny_rule_filter2"
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter2': walking
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_filter.deny_rule_filter1"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter1': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter2': evaluating
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter1': evaluating
2019/03/04 17:17:36 [TRACE] [walkPlan] Entering eval tree: aci_filter.deny_rule_filter2
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:36 [TRACE] [walkPlan] Entering eval tree: aci_filter.deny_rule_filter1
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2019/03/04 17:17:36 [TRACE] [walkPlan] Exiting eval tree: aci_rest.rest_mon_epg_pol
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_rest.rest_mon_epg_pol': expanding/walking dynamic subgraph
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] OrphanResourceCount: Starting...
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_rest.rest_mon_epg_pol": aci_rest.rest_mon_epg_pol
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_rest.rest_mon_epg_pol" references: []
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootTransformer:

aci_rest.rest_mon_epg_pol - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_rest.rest_mon_epg_pol"
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_rest.rest_mon_epg_pol"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_rest.rest_mon_epg_pol': walking
2019/03/04 17:17:36 [TRACE] [walkPlan] Exiting eval tree: aci_filter.deny_rule_filter1
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter1': expanding/walking dynamic subgraph
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_rest.rest_mon_epg_pol': evaluating
2019/03/04 17:17:36 [TRACE] [walkPlan] Exiting eval tree: aci_filter.deny_rule_filter2
2019/03/04 17:17:36 [TRACE] [walkPlan] Entering eval tree: aci_rest.rest_mon_epg_pol
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] OrphanResourceCount: Starting...
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter2': expanding/walking dynamic subgraph
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aci_filter.deny_rule_filter2 - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] OrphanResourceCount: Starting...
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aci_filter.deny_rule_filter2 - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_filter.deny_rule_filter1": aci_filter.deny_rule_filter1
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_filter.deny_rule_filter1" references: []
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_filter.deny_rule_filter2": aci_filter.deny_rule_filter2
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aci_filter.deny_rule_filter2 - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aci_filter.deny_rule_filter2 - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateResource
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_filter.deny_rule_filter1"
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_filter.deny_rule_filter1"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter1': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter1': evaluating
2019/03/04 17:17:36 [TRACE] [walkPlan] Entering eval tree: aci_filter.deny_rule_filter1
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalReadState
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalDiff
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_filter.deny_rule_filter2" references: []
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aci_filter.deny_rule_filter2 - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootTransformer:

aci_filter.deny_rule_filter2 - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateResource
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_filter.deny_rule_filter2"
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_filter.deny_rule_filter2"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter2': walking
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCheckPreventDestroy
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalWriteState
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalWriteDiff
2019/03/04 17:17:36 [TRACE] [walkPlan] Exiting eval tree: aci_rest.rest_mon_epg_pol
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_filter.deny_rule_filter2': evaluating
2019/03/04 17:17:36 [TRACE] [walkPlan] Entering eval tree: aci_filter.deny_rule_filter2
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalReadState
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalDiff
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateResource
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalReadState
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalDiff
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCheckPreventDestroy
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalWriteState
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalWriteDiff
2019/03/04 17:17:36 [TRACE] [walkPlan] Exiting eval tree: aci_filter.deny_rule_filter1
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCheckPreventDestroy
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalWriteState
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalWriteDiff
2019/03/04 17:17:36 [TRACE] [walkPlan] Exiting eval tree: aci_filter.deny_rule_filter2
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_tenant.demotenant"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.demotenant': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.demotenant': evaluating
2019/03/04 17:17:36 [TRACE] [walkPlan] Entering eval tree: aci_tenant.demotenant
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2019/03/04 17:17:36 [TRACE] [walkPlan] Exiting eval tree: aci_tenant.demotenant
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.demotenant': expanding/walking dynamic subgraph
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aci_tenant.demotenant - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] OrphanResourceCount: Starting...
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aci_tenant.demotenant - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [DEBUG] Resource state not found for "aci_tenant.demotenant": aci_tenant.demotenant
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aci_tenant.demotenant - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aci_tenant.demotenant - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [DEBUG] ReferenceTransformer: "aci_tenant.demotenant" references: []
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aci_tenant.demotenant - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] Graph after step *terraform.RootTransformer:

aci_tenant.demotenant - *terraform.NodePlannableResourceInstance
2019/03/04 17:17:36 [TRACE] dag/walk: added new vertex: "aci_tenant.demotenant"
2019/03/04 17:17:36 [TRACE] dag/walk: walking "aci_tenant.demotenant"
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.demotenant': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.aci_tenant.demotenant': evaluating
2019/03/04 17:17:36 [TRACE] [walkPlan] Entering eval tree: aci_tenant.demotenant
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalValidateResource
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalReadState
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalDiff
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCheckPreventDestroy
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalWriteState
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalWriteDiff
2019/03/04 17:17:36 [TRACE] [walkPlan] Exiting eval tree: aci_tenant.demotenant
2019/03/04 17:17:36 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2019/03/04 17:17:36 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2019/03/04 17:17:36 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2019/03/04 17:17:36 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2019/03/04 17:17:36 [TRACE] dag/walk: walking "provider.aci (close)"
2019/03/04 17:17:36 [TRACE] vertex 'root.provider.aci (close)': walking
2019/03/04 17:17:36 [TRACE] vertex 'root.provider.aci (close)': evaluating
2019/03/04 17:17:36 [TRACE] [walkPlan] Entering eval tree: provider.aci (close)
2019/03/04 17:17:36 [TRACE] root: eval: *terraform.EvalCloseProvider
2019/03/04 17:17:36 [TRACE] [walkPlan] Exiting eval tree: provider.aci (close)
2019/03/04 17:17:36 [TRACE] dag/walk: walking "root"
2019/03/04 17:17:36 [TRACE] vertex 'root.root': walking
2019/03/04 17:17:36 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2019/03/04 17:17:38 [INFO] terraform: building graph: GraphTypeApply
2019/03/04 17:17:38 [TRACE] DiffTransformer: starting
2019/03/04 17:17:38 [TRACE] DiffTransformer: Module: CREATE: aci_filter.deny_rule_filter1
  annotation:  "" => "<computed>"
  description: "" => "This filter is created by terraform ACI provider."
  name:        "" => "test_tf_filter" (forces new resource)
  name_alias:  "" => "<computed>"
  tenant_dn:   "" => "<computed>"
CREATE: aci_filter.deny_rule_filter2
  annotation:  "" => "<computed>"
  description: "" => "This filter is created by terraform ACI provider."
  name:        "" => "test_tf_filter2" (forces new resource)
  name_alias:  "" => "<computed>"
  tenant_dn:   "" => "<computed>"
CREATE: aci_rest.rest_mon_epg_pol
  class_name:   "" => "monEPGPol"
  content.%:    "0" => "1"
  content.name: "" => "testpol"
  dn:           "" => "<computed>"
  path:         "" => "<computed>"
CREATE: aci_tenant.demotenant
  annotation:                    "" => "<computed>"
  description:                   "" => "This tenant is created by terraform"
  name:                          "" => "tf_test_tenant" (forces new resource)
  name_alias:                    "" => "<computed>"
  relation_fv_rs_tenant_mon_pol: "" => "<computed>"
  relation_fv_rs_tn_deny_rule.#: "" => "<computed>"
CREATE: aci_tenant.tenant_for_filter
  annotation:  "" => "<computed>"
  description: "" => "This tenant is created by terraform ACI provider"
  name:        "" => "tenant_for_filter" (forces new resource)
  name_alias:  "" => "<computed>"
CREATE: aci_tenant.test_tenant
  annotation:  "" => "<computed>"
  description: "" => "This tenant is created by terraform"
  name:        "" => "tf_test_rel_tenant" (forces new resource)
  name_alias:  "" => "<computed>"
2019/03/04 17:17:38 [TRACE] DiffTransformer: Resource "aci_tenant.test_tenant": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"name":*terraform.ResourceAttrDiff{Old:"", New:"tf_test_rel_tenant", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "annotation":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "name_alias":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "description":*terraform.ResourceAttrDiff{Old:"", New:"This tenant is created by terraform", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2019/03/04 17:17:38 [TRACE] DiffTransformer: Resource "aci_tenant.tenant_for_filter": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"annotation":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "name_alias":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "description":*terraform.ResourceAttrDiff{Old:"", New:"This tenant is created by terraform ACI provider", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "name":*terraform.ResourceAttrDiff{Old:"", New:"tenant_for_filter", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2019/03/04 17:17:38 [TRACE] DiffTransformer: Resource "aci_rest.rest_mon_epg_pol": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"content.%":*terraform.ResourceAttrDiff{Old:"0", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "content.name":*terraform.ResourceAttrDiff{Old:"", New:"testpol", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "dn":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "path":*terraform.ResourceAttrDiff{Old:"", New:"api/node/mo/${aci_tenant.test_tenant.id}/monepg-testpol.json", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "class_name":*terraform.ResourceAttrDiff{Old:"", New:"monEPGPol", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2019/03/04 17:17:38 [TRACE] DiffTransformer: Resource "aci_filter.deny_rule_filter1": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"name_alias":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "description":*terraform.ResourceAttrDiff{Old:"", New:"This filter is created by terraform ACI provider.", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "tenant_dn":*terraform.ResourceAttrDiff{Old:"", New:"${aci_tenant.tenant_for_filter.id}", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "name":*terraform.ResourceAttrDiff{Old:"", New:"test_tf_filter", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "annotation":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2019/03/04 17:17:38 [TRACE] DiffTransformer: Resource "aci_filter.deny_rule_filter2": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"description":*terraform.ResourceAttrDiff{Old:"", New:"This filter is created by terraform ACI provider.", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "tenant_dn":*terraform.ResourceAttrDiff{Old:"", New:"${aci_tenant.tenant_for_filter.id}", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "name":*terraform.ResourceAttrDiff{Old:"", New:"test_tf_filter2", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "annotation":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "name_alias":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2019/03/04 17:17:38 [TRACE] DiffTransformer: Resource "aci_tenant.demotenant": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"name_alias":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "relation_fv_rs_tn_deny_rule.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "relation_fv_rs_tenant_mon_pol":*terraform.ResourceAttrDiff{Old:"", New:"${aci_rest.rest_mon_epg_pol.id}", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "description":*terraform.ResourceAttrDiff{Old:"", New:"This tenant is created by terraform", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "name":*terraform.ResourceAttrDiff{Old:"", New:"tf_test_tenant", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "annotation":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.DiffTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
aci_tenant.demotenant - *terraform.NodeApplyableResource
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
aci_tenant.test_tenant - *terraform.NodeApplyableResource
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
aci_tenant.demotenant - *terraform.NodeApplyableResource
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
aci_tenant.test_tenant - *terraform.NodeApplyableResource
2019/03/04 17:17:38 [TRACE] AttachResourceConfigTransformer: Beginning...
2019/03/04 17:17:38 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_tenant.demotenant
2019/03/04 17:17:38 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"demotenant", Type:"aci_tenant", RawCount:(*config.RawConfig)(0xc000416310), RawConfig:(*config.RawConfig)(0xc0004162a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:38 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_tenant.test_tenant
2019/03/04 17:17:38 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"test_tenant", Type:"aci_tenant", RawCount:(*config.RawConfig)(0xc0004163f0), RawConfig:(*config.RawConfig)(0xc000416380), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:38 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_tenant.tenant_for_filter
2019/03/04 17:17:38 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tenant_for_filter", Type:"aci_tenant", RawCount:(*config.RawConfig)(0xc0003d9ea0), RawConfig:(*config.RawConfig)(0xc0003d9e30), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:38 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_rest.rest_mon_epg_pol
2019/03/04 17:17:38 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"rest_mon_epg_pol", Type:"aci_rest", RawCount:(*config.RawConfig)(0xc0004165b0), RawConfig:(*config.RawConfig)(0xc000416540), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:38 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_filter.deny_rule_filter1
2019/03/04 17:17:38 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"deny_rule_filter1", Type:"aci_filter", RawCount:(*config.RawConfig)(0xc0003d9f80), RawConfig:(*config.RawConfig)(0xc0003d9f10), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:38 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aci_filter.deny_rule_filter2
2019/03/04 17:17:38 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"deny_rule_filter2", Type:"aci_filter", RawCount:(*config.RawConfig)(0xc000416070), RawConfig:(*config.RawConfig)(0xc000416000), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
aci_tenant.demotenant - *terraform.NodeApplyableResource
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
aci_tenant.test_tenant - *terraform.NodeApplyableResource
2019/03/04 17:17:38 [DEBUG] Resource state not found for "aci_tenant.tenant_for_filter": aci_tenant.tenant_for_filter
2019/03/04 17:17:38 [DEBUG] Resource state not found for "aci_rest.rest_mon_epg_pol": aci_rest.rest_mon_epg_pol
2019/03/04 17:17:38 [DEBUG] Resource state not found for "aci_filter.deny_rule_filter1": aci_filter.deny_rule_filter1
2019/03/04 17:17:38 [DEBUG] Resource state not found for "aci_filter.deny_rule_filter2": aci_filter.deny_rule_filter2
2019/03/04 17:17:38 [DEBUG] Resource state not found for "aci_tenant.demotenant": aci_tenant.demotenant
2019/03/04 17:17:38 [DEBUG] Resource state not found for "aci_tenant.test_tenant": aci_tenant.test_tenant
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.AttachStateTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
aci_tenant.demotenant - *terraform.NodeApplyableResource
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
aci_tenant.test_tenant - *terraform.NodeApplyableResource
2019/03/04 17:17:38 [TRACE] ProviderConfigTransformer: Starting for path: []
2019/03/04 17:17:38 [TRACE] Attach provider request: []string{} aci
2019/03/04 17:17:38 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aci", Alias:"", Version:"", RawConfig:(*config.RawConfig)(0xc000416230)}
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.ProviderConfigTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
aci_tenant.demotenant - *terraform.NodeApplyableResource
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
aci_tenant.test_tenant - *terraform.NodeApplyableResource
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
aci_tenant.demotenant - *terraform.NodeApplyableResource
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
aci_tenant.test_tenant - *terraform.NodeApplyableResource
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [DEBUG] resource aci_tenant.test_tenant using provider provider.aci
2019/03/04 17:17:38 [DEBUG] resource aci_tenant.tenant_for_filter using provider provider.aci
2019/03/04 17:17:38 [DEBUG] resource aci_rest.rest_mon_epg_pol using provider provider.aci
2019/03/04 17:17:38 [DEBUG] resource aci_filter.deny_rule_filter1 using provider provider.aci
2019/03/04 17:17:38 [DEBUG] resource aci_filter.deny_rule_filter2 using provider provider.aci
2019/03/04 17:17:38 [DEBUG] resource aci_tenant.demotenant using provider provider.aci
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.ProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.PruneProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.graphTransformerMulti:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.ProvisionerTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.RootVariableTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.LocalTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.OutputTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.RemovedModuleTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [DEBUG] ReferenceTransformer: "provider.aci" references: []
2019/03/04 17:17:38 [DEBUG] ReferenceTransformer: "aci_tenant.test_tenant" references: []
2019/03/04 17:17:38 [DEBUG] ReferenceTransformer: "aci_tenant.tenant_for_filter" references: []
2019/03/04 17:17:38 [DEBUG] ReferenceTransformer: "aci_rest.rest_mon_epg_pol" references: [aci_tenant.test_tenant aci_tenant.test_tenant]
2019/03/04 17:17:38 [DEBUG] ReferenceTransformer: "aci_filter.deny_rule_filter1" references: [aci_tenant.tenant_for_filter aci_tenant.tenant_for_filter]
2019/03/04 17:17:38 [DEBUG] ReferenceTransformer: "aci_filter.deny_rule_filter2" references: [aci_tenant.tenant_for_filter aci_tenant.tenant_for_filter]
2019/03/04 17:17:38 [DEBUG] ReferenceTransformer: "aci_tenant.demotenant" references: [aci_filter.deny_rule_filter1 aci_filter.deny_rule_filter2 aci_rest.rest_mon_epg_pol aci_filter.deny_rule_filter1 aci_filter.deny_rule_filter2 aci_rest.rest_mon_epg_pol]
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.ReferenceTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  aci_tenant.demotenant - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.TargetsTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  aci_tenant.demotenant - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  aci_tenant.demotenant - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
provider.aci (close) - *terraform.graphNodeCloseProvider
  aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  aci_tenant.demotenant - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  aci_tenant.demotenant - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
provider.aci (close) - *terraform.graphNodeCloseProvider
  aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  aci_tenant.demotenant - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.RootTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.demotenant - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  aci_tenant.demotenant - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
provider.aci - *terraform.NodeApplyableProvider
provider.aci (close) - *terraform.graphNodeCloseProvider
  aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  aci_tenant.demotenant - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aci (close) - *terraform.graphNodeCloseProvider
2019/03/04 17:17:38 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
  aci_tenant.test_tenant - *terraform.NodeApplyableResource
aci_tenant.demotenant - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter1 - *terraform.NodeApplyableResource
  aci_filter.deny_rule_filter2 - *terraform.NodeApplyableResource
  aci_rest.rest_mon_epg_pol - *terraform.NodeApplyableResource
aci_tenant.tenant_for_filter - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
aci_tenant.test_tenant - *terraform.NodeApplyableResource
  provider.aci - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aci_tenant.demotenant - *terraform.NodeApplyableResource
provider.aci - *terraform.NodeApplyableProvider
provider.aci (close) - *terraform.graphNodeCloseProvider
  aci_tenant.demotenant - *terraform.NodeApplyableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aci (close) - *terraform.graphNodeCloseProvider
2019/03/04 17:17:38 [DEBUG] Starting graph walk: walkApply
2019/03/04 17:17:38 [TRACE] dag/walk: added new vertex: "aci_tenant.test_tenant"
2019/03/04 17:17:38 [TRACE] dag/walk: added new vertex: "aci_filter.deny_rule_filter2"
2019/03/04 17:17:38 [TRACE] dag/walk: added new vertex: "provider.aci"
2019/03/04 17:17:38 [TRACE] dag/walk: added new vertex: "aci_tenant.tenant_for_filter"
2019/03/04 17:17:38 [TRACE] dag/walk: added new vertex: "aci_filter.deny_rule_filter1"
2019/03/04 17:17:38 [TRACE] dag/walk: added new vertex: "aci_tenant.demotenant"
2019/03/04 17:17:38 [TRACE] dag/walk: added new vertex: "aci_rest.rest_mon_epg_pol"
2019/03/04 17:17:38 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2019/03/04 17:17:38 [TRACE] dag/walk: added new vertex: "root"
2019/03/04 17:17:38 [TRACE] dag/walk: added new vertex: "provider.aci (close)"
2019/03/04 17:17:38 [TRACE] dag/walk: added edge: "aci_tenant.demotenant" waiting on "aci_filter.deny_rule_filter1"
2019/03/04 17:17:38 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2019/03/04 17:17:38 [TRACE] dag/walk: added edge: "provider.aci (close)" waiting on "aci_tenant.demotenant"
2019/03/04 17:17:38 [TRACE] dag/walk: added edge: "aci_tenant.tenant_for_filter" waiting on "provider.aci"
2019/03/04 17:17:38 [TRACE] dag/walk: added edge: "aci_tenant.demotenant" waiting on "aci_filter.deny_rule_filter2"
2019/03/04 17:17:38 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aci_tenant.demotenant"
2019/03/04 17:17:38 [TRACE] dag/walk: added edge: "aci_tenant.demotenant" waiting on "aci_rest.rest_mon_epg_pol"
2019/03/04 17:17:38 [TRACE] dag/walk: added edge: "aci_filter.deny_rule_filter1" waiting on "aci_tenant.tenant_for_filter"
2019/03/04 17:17:38 [TRACE] dag/walk: added edge: "root" waiting on "provider.aci (close)"
2019/03/04 17:17:38 [TRACE] dag/walk: added edge: "aci_tenant.test_tenant" waiting on "provider.aci"
2019/03/04 17:17:38 [TRACE] dag/walk: added edge: "aci_rest.rest_mon_epg_pol" waiting on "aci_tenant.test_tenant"
2019/03/04 17:17:38 [TRACE] dag/walk: added edge: "aci_filter.deny_rule_filter2" waiting on "aci_tenant.tenant_for_filter"
2019/03/04 17:17:38 [TRACE] dag/walk: dependencies changed for "aci_tenant.demotenant", sending new deps
2019/03/04 17:17:38 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2019/03/04 17:17:38 [TRACE] dag/walk: dependencies changed for "provider.aci (close)", sending new deps
2019/03/04 17:17:38 [TRACE] dag/walk: dependencies changed for "aci_tenant.tenant_for_filter", sending new deps
2019/03/04 17:17:38 [TRACE] dag/walk: dependencies changed for "aci_rest.rest_mon_epg_pol", sending new deps
2019/03/04 17:17:38 [TRACE] dag/walk: dependencies changed for "aci_filter.deny_rule_filter2", sending new deps
2019/03/04 17:17:38 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2019/03/04 17:17:38 [TRACE] dag/walk: dependencies changed for "aci_filter.deny_rule_filter1", sending new deps
2019/03/04 17:17:38 [TRACE] dag/walk: dependencies changed for "aci_tenant.test_tenant", sending new deps
2019/03/04 17:17:38 [TRACE] dag/walk: walking "provider.aci"
2019/03/04 17:17:38 [TRACE] vertex 'root.provider.aci': walking
2019/03/04 17:17:38 [TRACE] vertex 'root.provider.aci': evaluating
2019/03/04 17:17:38 [TRACE] [walkApply] Entering eval tree: provider.aci
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalInitProvider
2019/03/04 17:17:38 [TRACE] root: eval: terraform.EvalNoop
2019/03/04 17:17:38 [TRACE] root: eval: terraform.EvalNoop
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalOpFilter
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalInterpolateProvider
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalOpFilter
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalConfigProvider
2019/03/04 17:17:38 [TRACE] [walkApply] Exiting eval tree: provider.aci
2019/03/04 17:17:38 [TRACE] dag/walk: walking "aci_tenant.tenant_for_filter"
2019/03/04 17:17:38 [TRACE] vertex 'root.aci_tenant.tenant_for_filter': walking
2019/03/04 17:17:38 [TRACE] vertex 'root.aci_tenant.tenant_for_filter': evaluating
2019/03/04 17:17:38 [TRACE] [walkApply] Entering eval tree: aci_tenant.tenant_for_filter
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalInstanceInfo
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:38 [TRACE] root: eval: terraform.EvalNoop
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:38 [TRACE] dag/walk: walking "aci_tenant.test_tenant"
2019/03/04 17:17:38 [TRACE] vertex 'root.aci_tenant.test_tenant': walking
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:38 [TRACE] vertex 'root.aci_tenant.test_tenant': evaluating
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadState
2019/03/04 17:17:38 [TRACE] [walkApply] Entering eval tree: aci_tenant.test_tenant
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalValidateResource
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalInstanceInfo
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:38 [TRACE] root: eval: terraform.EvalNoop
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadState
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalValidateResource
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalCompareDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadState
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalApplyPre
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalApply
2019/03/04 17:17:38 [DEBUG] apply: aci_tenant.test_tenant: executing Apply
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalCompareDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadState
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalApplyPre
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalApply
2019/03/04 17:17:38 [DEBUG] apply: aci_tenant.tenant_for_filter: executing Apply
2019-03-04T17:17:38.625+0530 [DEBUG] plugin.terraform-provider-aci: 2019/03/04 17:17:38 Unsolicited response received on idle HTTP channel starting with "HTTP/1.1 405 Not Allowed\r\nServer: Cisco APIC\r\nDate: Mon, 04 Mar 2019 03:57:51 GMT\r\nContent-Type: text/html\r\nContent-Length: 331\r\nConnection: close\r\nETag: \"5bcfc2d7-14b\"\r\n\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<title>Untitled Document</title>\n</head>\n\n<body>\n405 Method Not Allowed\n</body>\n</html>\n"; err=<nil>
2019-03-04T17:17:38.625+0530 [DEBUG] plugin.terraform-provider-aci: 2019/03/04 17:17:38 Unsolicited response received on idle HTTP channel starting with "HTTP/1.1 405 Not Allowed\r\nServer: Cisco APIC\r\nDate: Mon, 04 Mar 2019 03:57:51 GMT\r\nContent-Type: text/html\r\nContent-Length: 331\r\nConnection: close\r\nETag: \"5bcfc2d7-14b\"\r\n\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<title>Untitled Document</title>\n</head>\n\n<body>\n405 Method Not Allowed\n</body>\n</html>\n"; err=<nil>
2019-03-04T17:17:38.657+0530 [DEBUG] plugin.terraform-provider-aci: 2019/03/04 17:17:38 Unsolicited response received on idle HTTP channel starting with "HTTP/1.1 405 Not Allowed\r\nServer: Cisco APIC\r\nDate: Mon, 04 Mar 2019 03:57:51 GMT\r\nContent-Type: text/html\r\nContent-Length: 331\r\nConnection: close\r\nETag: \"5bcfc2d7-14b\"\r\n\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<title>Untitled Document</title>\n</head>\n\n<body>\n405 Method Not Allowed\n</body>\n</html>\n"; err=<nil>
2019-03-04T17:17:38.657+0530 [DEBUG] plugin.terraform-provider-aci: 2019/03/04 17:17:38 [DEBUG] Error while reading relation fvRsTnDenyRule Invalid DN uni/uni/tn-tf_test_rel_tenant, wrong rn prefix uni at position 8
2019-03-04T17:17:38.660+0530 [DEBUG] plugin.terraform-provider-aci: 2019/03/04 17:17:38 Unsolicited response received on idle HTTP channel starting with "HTTP/1.1 405 Not Allowed\r\nServer: Cisco APIC\r\nDate: Mon, 04 Mar 2019 03:57:51 GMT\r\nContent-Type: text/html\r\nContent-Length: 331\r\nConnection: close\r\nETag: \"5bcfc2d7-14b\"\r\n\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<title>Untitled Document</title>\n</head>\n\n<body>\n405 Method Not Allowed\n</body>\n</html>\n"; err=<nil>
2019-03-04T17:17:38.660+0530 [DEBUG] plugin.terraform-provider-aci: 2019/03/04 17:17:38 [DEBUG] Error while reading relation fvRsTnDenyRule Invalid DN uni/uni/tn-tenant_for_filter, wrong rn prefix uni at position 8
2019-03-04T17:17:38.690+0530 [DEBUG] plugin.terraform-provider-aci: 2019/03/04 17:17:38 Unsolicited response received on idle HTTP channel starting with "HTTP/1.1 405 Not Allowed\r\nServer: Cisco APIC\r\nDate: Mon, 04 Mar 2019 03:57:51 GMT\r\nContent-Type: text/html\r\nContent-Length: 331\r\nConnection: close\r\nETag: \"5bcfc2d7-14b\"\r\n\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<title>Untitled Document</title>\n</head>\n\n<body>\n405 Method Not Allowed\n</body>\n</html>\n"; err=<nil>
2019-03-04T17:17:38.691+0530 [DEBUG] plugin.terraform-provider-aci: 2019/03/04 17:17:38 [DEBUG] Error while reading relation fvRsTenantMonPol Invalid DN uni/uni/tn-tenant_for_filter, wrong rn prefix uni at position 8
2019-03-04T17:17:38.692+0530 [DEBUG] plugin.terraform-provider-aci: 2019/03/04 17:17:38 Unsolicited response received on idle HTTP channel starting with "HTTP/1.1 405 Not Allowed\r\nServer: Cisco APIC\r\nDate: Mon, 04 Mar 2019 03:57:51 GMT\r\nContent-Type: text/html\r\nContent-Length: 331\r\nConnection: close\r\nETag: \"5bcfc2d7-14b\"\r\n\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<title>Untitled Document</title>\n</head>\n\n<body>\n405 Method Not Allowed\n</body>\n</html>\n"; err=<nil>
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalWriteState
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalApplyProvisioners
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalWriteState
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalWriteDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalApplyPost
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalWriteState
2019-03-04T17:17:38.692+0530 [DEBUG] plugin.terraform-provider-aci: 2019/03/04 17:17:38 [DEBUG] Error while reading relation fvRsTenantMonPol Invalid DN uni/uni/tn-tf_test_rel_tenant, wrong rn prefix uni at position 8
2019/03/04 17:17:38 [TRACE] Preserving existing state lineage "bb139ca6-a8ba-c12c-89c8-22304857bc14"
2019/03/04 17:17:38 [TRACE] Preserving existing state lineage "bb139ca6-a8ba-c12c-89c8-22304857bc14"
2019/03/04 17:17:38 [TRACE] Preserving existing state lineage "bb139ca6-a8ba-c12c-89c8-22304857bc14"
2019/03/04 17:17:38 [TRACE] Preserving existing state lineage "bb139ca6-a8ba-c12c-89c8-22304857bc14"
2019/03/04 17:17:38 [TRACE] [walkApply] Exiting eval tree: aci_tenant.tenant_for_filter
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalApplyProvisioners
2019/03/04 17:17:38 [TRACE] dag/walk: walking "aci_filter.deny_rule_filter2"
2019/03/04 17:17:38 [TRACE] dag/walk: walking "aci_filter.deny_rule_filter1"
2019/03/04 17:17:38 [TRACE] vertex 'root.aci_filter.deny_rule_filter1': walking
2019/03/04 17:17:38 [TRACE] vertex 'root.aci_filter.deny_rule_filter2': walking
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalWriteState
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalWriteDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalApplyPost
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2019/03/04 17:17:38 [TRACE] vertex 'root.aci_filter.deny_rule_filter1': evaluating
2019/03/04 17:17:38 [TRACE] [walkApply] Entering eval tree: aci_filter.deny_rule_filter1
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalInstanceInfo
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:38 [TRACE] root: eval: terraform.EvalNoop
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:38 [TRACE] Preserving existing state lineage "bb139ca6-a8ba-c12c-89c8-22304857bc14"
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:38 [TRACE] vertex 'root.aci_filter.deny_rule_filter2': evaluating
2019/03/04 17:17:38 [TRACE] [walkApply] Entering eval tree: aci_filter.deny_rule_filter2
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalInstanceInfo
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:38 [TRACE] root: eval: terraform.EvalNoop
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:38 [TRACE] Preserving existing state lineage "bb139ca6-a8ba-c12c-89c8-22304857bc14"
2019/03/04 17:17:38 [TRACE] Preserving existing state lineage "bb139ca6-a8ba-c12c-89c8-22304857bc14"
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:38 [TRACE] [walkApply] Exiting eval tree: aci_tenant.test_tenant
2019/03/04 17:17:38 [TRACE] dag/walk: walking "aci_rest.rest_mon_epg_pol"
2019/03/04 17:17:38 [TRACE] vertex 'root.aci_rest.rest_mon_epg_pol': walking
2019/03/04 17:17:38 [TRACE] vertex 'root.aci_rest.rest_mon_epg_pol': evaluating
2019/03/04 17:17:38 [TRACE] [walkApply] Entering eval tree: aci_rest.rest_mon_epg_pol
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalSequence
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalInstanceInfo
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:38 [TRACE] root: eval: terraform.EvalNoop
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadState
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalValidateResource
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadState
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalValidateResource
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalInterpolate
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadState
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalValidateResource
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalCompareDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalCompareDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadState
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadState
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalApplyPre
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalApply
2019/03/04 17:17:38 [DEBUG] apply: aci_rest.rest_mon_epg_pol: executing Apply
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalCompareDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalGetProvider
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalReadState
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalApplyPre
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalApplyPre
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalApply
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalApply
2019/03/04 17:17:38 [DEBUG] apply: aci_filter.deny_rule_filter2: executing Apply
2019/03/04 17:17:38 [DEBUG] apply: aci_filter.deny_rule_filter1: executing Apply
2019-03-04T17:17:38.741+0530 [DEBUG] plugin.terraform-provider-aci: 2019/03/04 17:17:38 Unsolicited response received on idle HTTP channel starting with "HTTP/1.1 405 Not Allowed\r\nServer: Cisco APIC\r\nDate: Mon, 04 Mar 2019 03:57:51 GMT\r\nContent-Type: text/html\r\nContent-Length: 331\r\nConnection: close\r\nETag: \"5bcfc2d7-14b\"\r\n\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<title>Untitled Document</title>\n</head>\n\n<body>\n405 Method Not Allowed\n</body>\n</html>\n"; err=<nil>
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalWriteState
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalApplyProvisioners
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalWriteState
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalWriteDiff
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalApplyPost
2019/03/04 17:17:38 [TRACE] root: eval: *terraform.EvalUpdateStateHook
2019/03/04 17:17:38 [TRACE] Preserving existing state lineage "bb139ca6-a8ba-c12c-89c8-22304857bc14"
2019/03/04 17:17:38 [TRACE] Preserving existing state lineage "bb139ca6-a8ba-c12c-89c8-22304857bc14"
2019/03/04 17:17:38 [TRACE] Preserving existing state lineage "bb139ca6-a8ba-c12c-89c8-22304857bc14"
2019/03/04 17:17:38 [TRACE] [walkApply] Exiting eval tree: aci_rest.rest_mon_epg_pol
2019-03-04T17:17:39.750+0530 [DEBUG] plugin.terraform-provider-aci: 2019/03/04 17:17:39 Unsolicited response received on idle HTTP channel starting with "HTTP/1.1 405 Not Allowed\r\nServer: Cisco APIC\r\nDate: Mon, 04 Mar 2019 03:57:52 GMT\r\nContent-Type: text/html\r\nContent-Length: 331\r\nConnection: close\r\nETag: \"5bcfc2d7-14b\"\r\n\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<title>Untitled Document</title>\n</head>\n\n<body>\n405 Method Not Allowed\n</body>\n</html>\n"; err=<nil>
2019-03-04T17:17:39.755+0530 [DEBUG] plugin.terraform-provider-aci: panic: runtime error: index out of range
2019-03-04T17:17:39.756+0530 [DEBUG] plugin.terraform-provider-aci: 
2019-03-04T17:17:39.756+0530 [DEBUG] plugin.terraform-provider-aci: goroutine 124 [running]:
2019-03-04T17:17:39.756+0530 [DEBUG] plugin.terraform-provider-aci: github.com/ciscoecosystem/aci-go-client/client.(*ServiceManager).ReadRelationvzRsFiltGraphAttFromFilter(0xc0003030a0, 0xc0003e8120, 0x2b, 0xc000172150, 0x0, 0x0, 0xc00012ea00)
2019-03-04T17:17:39.756+0530 [DEBUG] plugin.terraform-provider-aci: 	/Users/crest/go/src/github.com/ciscoecosystem/aci-go-client/client/vzFilter_service.go:107 +0x233
2019-03-04T17:17:39.756+0530 [DEBUG] plugin.terraform-provider-aci: github.com/ciscoecosystem/terraform-provider-aci/aci.resourceAciFilterRead(0xc000392bd0, 0x1a7eca0, 0xc0003cc000, 0x1919920, 0x1be6210)
2019-03-04T17:17:39.756+0530 [DEBUG] plugin.terraform-provider-aci: 	/Users/crest/go/src/github.com/ciscoecosystem/terraform-provider-aci/aci/resource_aci_vzfilter.go:230 +0xe4
2019-03-04T17:17:39.756+0530 [DEBUG] plugin.terraform-provider-aci: github.com/ciscoecosystem/terraform-provider-aci/aci.resourceAciFilterCreate(0xc000392bd0, 0x1a7eca0, 0xc0003cc000, 0xc000392bd0, 0x0)
2019-03-04T17:17:39.756+0530 [DEBUG] plugin.terraform-provider-aci: 	/Users/crest/go/src/github.com/ciscoecosystem/terraform-provider-aci/aci/resource_aci_vzfilter.go:160 +0x582
2019-03-04T17:17:39.756+0530 [DEBUG] plugin.terraform-provider-aci: github.com/hashicorp/terraform/helper/schema.(*Resource).Apply(0xc0002b2f50, 0xc0000c11d0, 0xc000492920, 0x1a7eca0, 0xc0003cc000, 0x100d801, 0xc000241b80, 0x10b991c)
2019-03-04T17:17:39.756+0530 [DEBUG] plugin.terraform-provider-aci: 	/Users/crest/go/src/github.com/hashicorp/terraform/helper/schema/resource.go:225 +0x351
2019-03-04T17:17:39.756+0530 [DEBUG] plugin.terraform-provider-aci: github.com/hashicorp/terraform/helper/schema.(*Provider).Apply(0xc0002b3b20, 0xc0000c1180, 0xc0000c11d0, 0xc000492920, 0xc000056800, 0xc000241b60, 0x258d000)
2019-03-04T17:17:39.756+0530 [DEBUG] plugin.terraform-provider-aci: 	/Users/crest/go/src/github.com/hashicorp/terraform/helper/schema/provider.go:283 +0x9c
2019-03-04T17:17:39.756+0530 [DEBUG] plugin.terraform-provider-aci: github.com/hashicorp/terraform/plugin.(*ResourceProviderServer).Apply(0xc0004935e0, 0xc0004928c0, 0xc0004b3f90, 0x0, 0x0)
2019-03-04T17:17:39.756+0530 [DEBUG] plugin.terraform-provider-aci: 	/Users/crest/go/src/github.com/hashicorp/terraform/plugin/resource_provider.go:527 +0x57
2019-03-04T17:17:39.756+0530 [DEBUG] plugin.terraform-provider-aci: reflect.Value.call(0xc000366300, 0xc000305188, 0x13, 0x1a81ccb, 0x4, 0xc000241f18, 0x3, 0x3, 0xc00042af40, 0xc000370400, ...)
2019-03-04T17:17:39.757+0530 [DEBUG] plugin.terraform-provider-aci: 	/usr/local/Cellar/go/1.11.2/libexec/src/reflect/value.go:447 +0x449
2019-03-04T17:17:39.757+0530 [DEBUG] plugin.terraform-provider-aci: reflect.Value.Call(0xc000366300, 0xc000305188, 0x13, 0xc000347718, 0x3, 0x3, 0x0, 0x0, 0x100010000)
2019-03-04T17:17:39.757+0530 [DEBUG] plugin.terraform-provider-aci: 	/usr/local/Cellar/go/1.11.2/libexec/src/reflect/value.go:308 +0xa4
2019-03-04T17:17:39.757+0530 [DEBUG] plugin.terraform-provider-aci: net/rpc.(*service).call(0xc0004ba080, 0xc00048eb90, 0xc0004a4880, 0xc0004a4890, 0xc00015ac80, 0xc00000d1a0, 0x18ef600, 0xc0004928c0, 0x16, 0x18ef640, ...)
2019-03-04T17:17:39.757+0530 [DEBUG] plugin.terraform-provider-aci: 	/usr/local/Cellar/go/1.11.2/libexec/src/net/rpc/server.go:384 +0x14e
2019-03-04T17:17:39.757+0530 [DEBUG] plugin.terraform-provider-aci: created by net/rpc.(*Server).ServeCodec
2019-03-04T17:17:39.757+0530 [DEBUG] plugin.terraform-provider-aci: 	/usr/local/Cellar/go/1.11.2/libexec/src/net/rpc/server.go:481 +0x47e
2019/03/04 17:17:39 [TRACE] root: eval: *terraform.EvalWriteState
2019/03/04 17:17:39 [TRACE] root: eval: *terraform.EvalWriteState
2019/03/04 17:17:39 [TRACE] root: eval: *terraform.EvalApplyProvisioners
2019/03/04 17:17:39 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:39 [TRACE] root: eval: *terraform.EvalWriteState
2019/03/04 17:17:39 [TRACE] root: eval: *terraform.EvalWriteDiff
2019/03/04 17:17:39 [TRACE] root: eval: *terraform.EvalApplyPost
2019/03/04 17:17:39 [TRACE] root: eval: *terraform.EvalApplyProvisioners
2019/03/04 17:17:39 [TRACE] root: eval: *terraform.EvalIf
2019/03/04 17:17:39 [ERROR] root: eval: *terraform.EvalApplyPost, err: 1 error(s) occurred:

* aci_filter.deny_rule_filter1: unexpected EOF
2019/03/04 17:17:39 [ERROR] root: eval: *terraform.EvalSequence, err: 1 error(s) occurred:

* aci_filter.deny_rule_filter1: unexpected EOF
2019/03/04 17:17:39 [TRACE] [walkApply] Exiting eval tree: aci_filter.deny_rule_filter1
2019/03/04 17:17:39 [TRACE] root: eval: *terraform.EvalWriteState
2019/03/04 17:17:39 [TRACE] root: eval: *terraform.EvalWriteDiff
2019/03/04 17:17:39 [TRACE] root: eval: *terraform.EvalApplyPost
2019/03/04 17:17:39 [ERROR] root: eval: *terraform.EvalApplyPost, err: 1 error(s) occurred:

* aci_filter.deny_rule_filter2: unexpected EOF
2019/03/04 17:17:39 [ERROR] root: eval: *terraform.EvalSequence, err: 1 error(s) occurred:

* aci_filter.deny_rule_filter2: unexpected EOF
2019/03/04 17:17:39 [TRACE] [walkApply] Exiting eval tree: aci_filter.deny_rule_filter2
2019/03/04 17:17:39 [TRACE] dag/walk: upstream errored, not walking "aci_tenant.demotenant"
2019/03/04 17:17:39 [TRACE] dag/walk: upstream errored, not walking "meta.count-boundary (count boundary fixup)"
2019/03/04 17:17:39 [TRACE] dag/walk: upstream errored, not walking "provider.aci (close)"
2019/03/04 17:17:39 [TRACE] dag/walk: upstream errored, not walking "root"
2019-03-04T17:17:39.761+0530 [DEBUG] plugin: plugin process exited: path=/Users/crest/go/bin/terraform-provider-aci
2019/03/04 17:17:39 [TRACE] Preserving existing state lineage "bb139ca6-a8ba-c12c-89c8-22304857bc14"
2019/03/04 17:17:39 [TRACE] Preserving existing state lineage "bb139ca6-a8ba-c12c-89c8-22304857bc14"
2019/03/04 17:17:39 [TRACE] Preserving existing state lineage "bb139ca6-a8ba-c12c-89c8-22304857bc14"
2019/03/04 17:17:39 [DEBUG] plugin: waiting for all plugin processes to complete...
2019-03-04T17:17:39.766+0530 [WARN ] plugin: error closing client during Kill: err="connection is shut down"
